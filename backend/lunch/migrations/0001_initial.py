# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-07-18 04:25
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyLunchRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(null=True, unique=True)),
                ('totalOrders', models.IntegerField(default=0)),
                ('price', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExceptionalLunchDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('addDay', models.BooleanField(default=False)),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MealPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(default=25000)),
                ('inUse', models.BooleanField(default=False)),
                ('startDate', models.DateField(default=datetime.date(2016, 7, 18), unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='MonthCalendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('month', models.IntegerField()),
                ('calendar', models.CharField(max_length=400)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalDefaultLunchSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mon', models.BooleanField(default=False)),
                ('tue', models.BooleanField(default=False)),
                ('wed', models.BooleanField(default=False)),
                ('thu', models.BooleanField(default=False)),
                ('fri', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalMonthlyLunchOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('month', models.IntegerField()),
                ('orderDays', models.CommaSeparatedIntegerField(max_length=400, null=True)),
                ('numMeal', models.IntegerField(default=0)),
                ('totalPrice', models.IntegerField(default=0)),
                ('calendar', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lunch.MonthCalendar')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='monthcalendar',
            unique_together=set([('year', 'month')]),
        ),
        migrations.AddField(
            model_name='dailylunchrequest',
            name='calendar',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lunch.MonthCalendar'),
        ),
        migrations.AddField(
            model_name='dailylunchrequest',
            name='users',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='personalmonthlylunchorder',
            unique_together=set([('user', 'month', 'year')]),
        ),
        migrations.AlterUniqueTogether(
            name='exceptionallunchday',
            unique_together=set([('user', 'date')]),
        ),
    ]
